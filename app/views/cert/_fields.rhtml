<%

@agencies = Agency.find(:all, {
	:order => 'agencies.name', 
	:conditions => @current_user.agency_level? && @current_user.agency_id ? ['agencies.id in (?)', [@current_user.agency_id, @obj.agency_id]] : nil
})

@school_agency_ids = @agencies.select { |a| a.agency_type == 'SCHOOL DISTRICT' }.collect &:id

@agency_opts = @agencies.collect { |a| [a.name, a.id] }
@department_opts = Department.find(:all, {
	:order => 'departments.name', 
	:conditions => @current_user.agency_level? && @current_user.department_id ? ['departments.id in (?)', [@current_user.department_id, @obj.department_id]] : nil
}).collect { |a| [a.name, a.id] }

%>
<%= f.tr_select :agency_id, @agency_opts, :label => 'Agency', :req => true, :include_blank => !@current_user.agency_id %>
<%= f.tr_select :department_id, @department_opts, :label => 'Department', :req => true, :include_blank => !@current_user.department_id %>
<% if @current_user.agency_level? %>
	<%= f.tr_select :exam_id, Exam.find(:all, :conditions => 'valid_until >= date(now())', :order => 'exams.title').collect { |e| ["#{e.title} - #{e.exam_no}", e.id] }, :include_blank => true, :label => 'Exam', :req => true %>
<% else %>
	<tr>
		<th>Exam: <span class="req">*</span></th>
		<td>
			<%= partial 'pop_field', :id => 'obj_exam_label', :text => (@obj.exam ? @obj.exam.label : ''), :name => 'obj[exam_id]', :id => 'obj_exam_id', :url => popup_url({:controller => :exam}), :value => @obj.exam_id %>
			<div>Click the field above to open a popup where you can select an existing exam or create a new one.</div>
		</td>
	</tr>
<% end %>
<% if false %>
	<%= f.tr_select :job_id, Job.find(:all, :order => 'jobs.name').collect { |j| [j.name, j.id] }, :include_blank => true, :label => 'Job Title' %>	
<% end %>
<% if !@current_user.agency_level? %>
	<%= f.tr_text_field :requestor, :label => 'Requestor', :class => 'ucase' , :req => true %>
	<%= f.tr_calendar_date_select :requested_date, :label => 'Requested Date', :class => 'ucase', :help => 'Date list is requested. If requested electronically by an agency user this will automatically be populated.' %>
	<%= f.tr_calendar_date_select :pending_date, :label => 'Pending Date', :class => 'ucase', :help => 'Date list is forwarded from liaison to certification specialist.' %>
	<%= f.tr_calendar_date_select :certification_date, :label => 'Certification Date', :class => 'ucase', :onchange => 'cdate_change();', :help => 'Date list is certified. Agencies will be able to enter candidate actions on/after this date.' %>	
	<%= f.tr_calendar_date_select :notified_date, :label => 'Agency Notified Date', :class => 'ucase', :help => 'Date agency is notified that the list has been certified.' %>	
	<%= f.tr_calendar_date_select :return_date, :label => 'Return Date', :class => 'ucase', :help => 'Date list expires and can no longer be used for hiring.' %>	
	<%= f.tr_calendar_date_select :completed_date, :label => 'Completed Date', :class => 'ucase', :help => 'Date agency completes and returns the list. Agency will no longer be able to enter candidate actions on/after this date.' %>	
	<%= f.tr_calendar_date_select :prefinished_date, :label => 'Prefinished Date', :class => 'ucase', :help => 'Date returned list is approved by liaison and sent to certification specialist.' %>	
	<%= f.tr_text_field :finished, :label => 'Finished', :class => 'ucase', :help => 'Enter initials and/or date to indicate completed list returned from agency has been reviewed and approved.' %>
	<%= f.tr_check :show_actions, :label => 'Show Actions?', :text => 'If checked, actions will be shown on the public website when exported.' %>	
<% end %>
<%= f.tr_text_field :number_of_positions, :label => 'No. Positions', :class => 'ucase', :size => 10, :req => true %>
<tr class="<%= f.err(:request_type) %>">
	<th>Request Type:<span class="req">*</span></th>
	<td>
		<label><%= f.radio_button :request_type, 'PROMOTIONAL' %> PROMOTIONAL</label>&nbsp;&nbsp;
		<label><%= f.radio_button :request_type, 'OPEN COMPETITIVE' %> OPEN COMPETITIVE</label>&nbsp;&nbsp;
		<label><%= f.radio_button :request_type, 'PREFERRED' %> PREFERRED</label>
	</td>
</tr>
<tr class="<%= f.err(:job_time) %>">
	<th>Time: <span class="req">*</span></th>
	<td>
		<% Const::JOB_TIMES.each_with_index { |t, i| %>
						<label><%= f.radio_button :job_time, t[1] %> <%= h t[0] %></label>&nbsp;&nbsp;
		 <% } %>
	</td>
</tr>
<tr id="tr_job_type" class="<%= f.err(:job_type) %>">
	<th>Job Type:<span class="req">*</span></th>
	<td>
		<label><%= f.radio_button :job_type, 'P' %> PERMANENT</label>&nbsp;&nbsp;
		<label><%= f.radio_button :job_type, 'C' %> CONTINGENT-PERMANENT</label>&nbsp;&nbsp;
		<label><%= f.radio_button :job_type, 'T' %> TEMPORARY</label>
	</td>
</tr>
<tr id="tr_temp_duration"<% if(@obj.job_type != 'T') %> style="display: none;"<% end %> class="<%= f.err(:temp_duration) %>">
	<th>Temp Duration: <span class="req">*</span></th>
	<% temp_opts = ['0-3 MONTHS', '3-6 MONTHS', '6-12 MONTHS'] %>
	<% if @obj.temp_duration.blank? || temp_opts.include?(@obj.temp_duration) %>
	<td>
		<% temp_opts.each { |t| %>
			<label><%= f.radio_button :temp_duration, t %> <%= h t %></label>
		<% } %>
	</td>
	<% else %>
		<td><%= f.text_field :temp_duration, :label => 'If Temp, Duration', :class => 'ucase' %></td>
	<% end %>
</tr>
<tr class="<%= f.err(:general_or_residential) %>">
	<th>Gen/Dept/Res: <span class="req">*</span></th>
	<td>
		<% if(@obj.general_or_residential == 'N/A') %><label><%= f.radio_button :general_or_residential, 'N/A' %>N/A</label>&nbsp;&nbsp;<% end %>
		<label><%= f.radio_button :general_or_residential, 'General' %>General</label>&nbsp;&nbsp;
		<label><%= f.radio_button :general_or_residential, 'Departmental' %>Departmental(MC Depts Only)</label>&nbsp;&nbsp;

		<label><%= f.radio_button :general_or_residential, 'Residential' %>Residential</label>&nbsp;&nbsp;
	</td>
</tr>
<% if false %>
	<tr>
		<th>Months: <span class="req">*</span></th>
		<td>
			<label><%= f.radio_button :months, 'N/A' %>N/A</label>&nbsp;&nbsp;

			<label><%= f.radio_button :months, '10 Month' %>10 Month</label>&nbsp;&nbsp;
			<label><%= f.radio_button :months, '11 Month' %>11 Month</label>&nbsp;&nbsp;
			<label><%= f.radio_button :months, '12 Month' %>12 Month</label>&nbsp;&nbsp;
		</td>
	</tr>
<% end %>
<%= f.tr_text_field :salary_range, :label => 'Salary Range', :class => 'ucase', :req => true %>
<% if !@current_user.agency_level? %>
	<%= f.tr_text_area :comments, :label => 'Note(s)', :class => 'ucase', :size => '80x2' %>
	<tr>
		<th>Comments:</th>
		<td>
			<div><a href="<%= popup_url(:controller => :cert_bottom_note, :action => :index) %>" id="select_obj_bottom_note" class="popup-select-text">Select Previous Entry...</a></div>
			<%= f.text_area :bottom_note, :class => 'ucase', :size => '80x3' %>
		</td>
	</tr>

	<tr>
		<th>End of List:</th>
		<td>
			<div><a href="<%= popup_url(:controller => :cert_end_of_list, :action => :index) %>" id="select_obj_end_of_list" class="popup-select-text">Select Previous Entry...</a></div>
			<%= f.text_area :end_of_list, :class => 'ucase', :size => '80x2' %>
		</td>
	</tr>
	<%= f.tr_text_field :additional, :label => 'Additional Info', :class => 'ucase' %>
	<%= f.tr_text_area :internal_notes, :label => 'Internal Notes', :class => 'ucase', :size => '80x3' %>
<% end %>
<%= f.tr_text_area :agency_comments, :label => 'Agency Comments', :class => 'ucase', :size => '80x3' %>

<script type="text/javascript">
	
	var cdate_change;
	
	var school_agency_ids = <%= @school_agency_ids.to_json %>;
	
	(function($) {
	
		agency_select = $('#obj_agency_id');	
		department_select = $('#obj_department_id');
		department_row = department_select.closest('tr');
		var toggle_department = function() {
			var agency_id = parseInt(agency_select.val());
			if(school_agency_ids.indexOf(agency_id) != -1) {
				department_row.hide();
			}
			else {
				department_row.show();
			}
		}
		var set_department = function() {
			agency_name = agency_select.find(':selected').text();
			var department_options = department_select.children();
			for(var i = 0; i < department_options.length; i++) {
				if($(department_options[i]).text() == agency_name) {
					department_select[0].selectedIndex = i;
				}
			}
			toggle_department();
		}
		if(department_select[0].selectedIndex == 0) {
			set_department();
		}
		else {
			toggle_department();
		}
		agency_select.change(set_department);
	
		cdate = $('#obj_certification_date');
		
		cdate_change = function(e) {
			var d = Date.parse(cdate.val()).add({days: 60});
			$('#obj_return_date').val(d.toString('MM/dd/yyyy'));
		}

		cdate.change(cdate_change);
		
		$('#tr_job_type input').click(function(e) {
			show = $('#tr_job_type input:checked').val() == 'T'
			$('#tr_temp_duration')[show ? 'show' : 'hide']();
		});
		
	})(jQuery);
	/* jQuery('#obj_exam_id').change(function(e) {
		var inp = jQuery(this);
		var val = inp.val();
		inp.addClass('busy-bg');
		jQuery.ajax({
			url: root_url + 'exam/get_job/'+ val,
			data: {id: val},
			complete: function(xhr, status) {
			},
			success: function(data, status, xhr) {
				inp.removeClass('busy-bg');
				jQuery('#obj_job_id').val(data.id);

			},
			error: function(xhr, status, error) {
				alert('Error setting action.');
			}
		});
	}); */

</script>