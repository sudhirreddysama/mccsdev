<% if !@current_user.agency_level? || !@current_user.agency %>
	<%= f.tr_select :agency_id, Agency.find(:all, :order => 'agencies.name').collect { |a| [a.name, a.id] }, :label => 'Agency', :req => true, :include_blank => true %>
<% end %>
<% if !@current_user.agency_level? || !@current_user.department %>
	<%= f.tr_select :department_id, Department.find(:all, :order => 'departments.name').collect { |a| [a.name, a.id] }, :label => 'Department', :req => true, :include_blank => true %>
<% end %>
<% if !@current_user.agency_level? || !@current_user.division %>
	<tr>
		<th>Division:</th>
		<td><%= partial 'division/division_select', :f => f, :o => o, :field_name => 'obj' %></td>
	</tr>
<% end %>
<tr><th>Form:</th><td colspan="2">
<%= partial 'fields_page', :f => f %>
</td></tr>
<script>
	(function($) {
		$('input.date').datepicker().attr('autocomplete', 'new-password');
		
		var org_no_input = $('#obj_org_no');
		var cost_center_input = $('#obj_cost_center');
		var vacancy_no_input = $('#obj_vacancy_no');
		var position_input = $('#obj_position');
		var position_no_input = $('#obj_position_no');
		var salary_group_input = $('#obj_salary_group');
		var effective_date_input = $('#obj_effective_date');
		
		var setup_vacancy_ac = function(input) {
			input.autocomplete({
				focus: function(e, ui) {
					return false;
				},
				minLength: 2,
				select: function(e, ui) {
					var i = ui.item;
					position_input.val(i.position).effect('highlight');
					position_no_input.val(i.position_no).effect('highlight');
					org_no_input.val(i.org_no).effect('highlight');
					cost_center_input.val(i.cost_center).effect('highlight');
					salary_group_input.val(i.salary_group).effect('highlight');
					vacancy_no_input.val(i.exec_approval_no).effect('highlight');
					var ed = i.desired_start;
					ed = ed ? (new Date(ed)).toString('MM/dd/yyyy') : '';
					effective_date_input.val(ed).effect('highlight');
					return false;
				},
				source: function(request, response) {
					request.agency_id = $('#obj_agency_id').val();
					request.department_id = $('#obj_department_id').val();
					request.division_id = $('#obj_division_id').val();
					input.addClass('busy-bg');
					$.ajax({
						url: '<%= url_for(:controller => :vacancy, :action => :autocomplete) %>',
						data: request,
						success: function(data, status, xhr) {
							response(data);
						},
						complete: function(xhr, status) {
							input.removeClass('busy-bg');
						},
						error: function(xhr, status, error) {
						}
					});
				}
			}).data('autocomplete')._renderItem = function(ul, item) {
				var label = (item.exec_approval_no || 'NA') + ' - ' + item.position + '<span class="ac-extra">' +
					'<br /><i>Pos#:</i> ' + item.position_no + ' &nbsp; <i>Grp:</i> ' + item.salary_group +
					'<br /><i>Org#:</i> ' + item.org_no + ' &nbsp; <i>CC:</i> ' + item.cost_center +
						'</span>';
				return $('<li>').data('item.autocomplete', item).append('<a>' + label + '</a>').appendTo(ul);
			};
			input.attr('autocomplete', 'new-password');
		}
		setup_vacancy_ac(vacancy_no_input);
		
		var name_input = $('#obj_name');
		var address_input = $('#obj_address');
		var address2_input = $('#obj_address2');
		var address_city_input = $('#obj_address_city');
		var address_state_input = $('#obj_address_state');
		var address_zip_input = $('#obj_address_zip');
		var mail_address_input = $('#obj_mail_address');
		var mail_address2_input = $('#obj_mail_address2');
		var mail_city_input = $('#obj_mail_city');
		var mail_state_input = $('#obj_mail_state');
		var mail_zip_input = $('#obj_mail_zip');		
		var list_no_input = $('#obj_list_no');
		var email_input = $('#obj_email');
		var phone_input = $('#obj_phone');
		var ssn_input = $('#obj_ssn');
		var birth_date_input = $('#obj_birth_date');
		var civil_service_status_input = $('#obj_civil_service_status');
		
		var setup_name_ac = function(input) {
			input.autocomplete({
				focus: function(e, ui) {
					return false;
				},
				minLength: 2,
				select: function(e, ui) {
					var i = ui.item;
					name_input.val(i.first_name + ' ' + i.last_name).effect('highlight');
					if(i.residence_different) {
						mail_address_input.val(i.mailing_address).effect('highlight');
						mail_city_input.val(i.mailing_city).effect('highlight');
						mail_state_input.val(i.mailing_state).effect('highlight');
						mail_zip_input.val(i.mailing_zip).effect('highlight');
						address_input.val(i.residence_address).effect('highlight');
						address_city_input.val(i.residence_city).effect('highlight');
						address_state_input.val(i.residence_state).effect('highlight');
						address_zip_input.val(i.residence_zip).effect('highlight');
					}
					else {
						address_input.val(i.mailing_address).effect('highlight');
						address_city_input.val(i.mailing_city).effect('highlight');
						address_state_input.val(i.mailing_state).effect('highlight');
						address_zip_input.val(i.mailing_zip).effect('highlight');
					}
					list_no_input.val(i.exam_no).effect('highlight');
					email_input.val(i.email).effect('highlight');
					phone_input.val(i.phone).effect('highlight');
					ssn_input.val(i.ssn).effect('highlight');
					var dob = i.date_of_birth;
					dob = dob ? (new Date(dob)).toString('MM/dd/yyyy') : '';
					birth_date_input.val(dob).effect('highlight');
					var css = null;
					if(i.job_type == 'C') {
						css = 'CONTINGENT-PERMANENT'
					}
					else if(i.job_type == 'P') {
						css = 'PERMANENT'
					}
					else if(i.job_type == 'T') {
						css = 'TEMPORARY';
					}
					if(css) {
						civil_service_status_input.val(css).effect('highlight');
					}
					return false;
				},
				source: function(request, response) {
					request.agency_id = $('#obj_agency_id').val();
					request.department_id = $('#obj_department_id').val();
					request.division_id = $('#obj_division_id').val();
					input.addClass('busy-bg');
					$.ajax({
						url: '<%= url_for(:controller => :form_county_hire, :action => :applicant_autocomplete) %>',
						data: request,
						success: function(data, status, xhr) {
							response(data);
						},
						complete: function(xhr, status) {
							input.removeClass('busy-bg');
						},
						error: function(xhr, status, error) {
						}
					});
				}
			}).data('autocomplete')._renderItem = function(ul, item) {
				var cd = item.certification_date;
				cd = cd ? (new Date(cd)).toString('MM/dd/yyyy') : '';
				var label = item.first_name + ' ' + item.last_name + '<span class="ac-extra">' +
				'<br><i>Cert Date:</i> ' + cd + ' <i>Action:</i> ' + (item.cert_code || '(blank)') + 
				'<br><i>Cert:</i> ' + item.cert_title + '</span>';
				return $('<li>').data('item.autocomplete', item).append('<a>' + label + '</a>').appendTo(ul);
			};
			input.attr('autocomplete', 'new-password');
		}
		setup_name_ac(name_input);
	})(jQuery);
</script>