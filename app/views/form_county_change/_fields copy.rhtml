<% @update_js = true %>
<% if !@current_user.agency_level? || !@current_user.agency %>
	<%= f.tr_select :agency_id, Agency.find(:all, :order => 'agencies.name').collect { |a| [a.name, a.id] }, :label => 'Agency', :req => true, :include_blank => true %>
<% end %>
<% if !@current_user.agency_level? || !@current_user.department %>
	<%= f.tr_select :department_id, Department.find(:all, :order => 'departments.name').collect { |a| [a.name, a.id] }, :label => 'Department', :req => true, :include_blank => true %>
<% end %>
<% if !@current_user.agency_level? || !@current_user.division %>
	<tr>
		<th>Division:</th>
		<td><%= partial 'division/division_select', :f => f, :o => o, :field_name => 'obj' %></td>
	</tr>
<% end %>
<tr><th>Auto Fill From:</th><td>Use the fields below to auto-fill the form from other records in the system.</td></tr>
<tr>
	<th>Employee:</th>
	<td>
		<% v = @obj.vacancy_data %>
		<%= f.select :vacancy_data_id, v ? [["#{v.position_no} #{v.last_incumbent}", v.id]] : [], {}, :style => 'width: 600px;' %>
	</td>
</tr>
<tr>
	<th>Req. Fill Vac.:</th>
	<td>
		<% v = @obj.vacancy %>
		<%= f.select :vacancy_id, v ? [["#{v.exec_approval_no.blank? ? 'NA' : v.exec_approval_no} - #{v.position}", v.id]] : [], {}, :style => 'width: 600px;' %>
	</td>
</tr>
<tr>
	<th>New Position:</th>
	<td>
		<% v = @obj.vacancy_data_new %>
		<%= f.select :vacancy_data_new_id, v ? [["#{v.position_no} #{v.position}", v.id]] : [], {}, :style => 'width: 600px;' %>
	</td>
</tr>
<tr><th>Form:</th><td colspan="2">
<%= partial 'fields_page', :f => f %>
</td></tr>
<script>

var obj_agency_id = $('#obj_agency_id');
var obj_department_id = $('#obj_department_id');
var obj_division_id = $('#obj_division_id');

var obj_vacancy_data_id = $('#obj_vacancy_data_id');
var obj_vacancy_id = $('#obj_vacancy_id');
var obj_vacancy_data_new_id = $('#obj_vacancy_data_new_id');

var obj_position = $('#obj_position');
var obj_position_no = $('#obj_position_no');
var obj_first_name = $('#obj_first_name');
var obj_last_name = $('#obj_last_name');
var obj_middle_name = $('#obj_middle_name');
var obj_first_name = $('#obj_first_name');
var obj_org_no = $('#obj_org_no');
var obj_county_org_no = $('#obj_county_org_no');
var obj_cost_center = $('#obj_cost_center');
var obj_personnel_no = $('#obj_personnel_no');

var obj_vacancy_no = $('#obj_vacancy_no');

var obj_work_sched_code = $('#obj_org_work_sched_code');

var vacancy_obj = <%= (@obj.vacancy ? @obj.vacancy.autocomplete_json_data : nil).to_json %>;
var vacancy_data_obj = <%= (@obj.vacancy_data ? @obj.vacancy_data.autocomplete_json_data : nil).to_json %>;
var vacancy_data_new_obj = <%= (@obj.vacancy_data_new ? @obj.vacancy_data_new.autocomplete_json_data : nil).to_json %>;

var set_autocomplete_fields_vacancy_obj = function() {
	if($('.fields1:checked').length) set_fields1();
	if($('.fields2:checked').length) set_fields2();
	if($('.fields3:checked').length) set_fields3b();
	if($('.fields4:checked').length) set_fields4();
	if($('.fields5:checked').length) set_fields5();
}
var set_autocomplete_fields_vacancy_data_obj = function() {
	if($('.fields3:checked').length) set_fields3a();
}

var set_fields1 = function() {
	var i = vacancy_data_new_obj || vacancy_obj;
	if(i) {
		$('#obj_action_title').val(i.position).effect('highlight');
		$('#obj_action_position_no').val(i.position_no).effect('highlight');
		$('#obj_action_group').val(i.salary_group).effect('highlight');
		$('#obj_action_job_code').val(i.job_no).effect('highlight');
		if(i.flsa_exempt == 'E') {
			$('#obj_action_flsa_exempt_true').prop('checked', true);
		}
		else if(i.flsa_exempt == 'N') {
			$('#obj_action_flsa_exempt_false').prop('checked', true);
		}
		else {
			$('#obj_action_flsa_exempt_true').prop('checked', false);
			$('#obj_action_flsa_exempt_false').prop('checked', false);
		}				
	}
}
$('.fields1').change(function(e) { if(this.checked) set_fields1(); });

var set_fields2 = function() {
	var i = vacancy_data_new_obj || vacancy_obj;
	if(i) {
		$('#obj_org_pe_po_co_org_no').val(i.county_org_no).effect('highlight');
		$('#obj_org_pe_po_sap_org_no').val(i.org_no).effect('highlight');
		$('#obj_org_pe_po_cost_center').val(i.cost_center).effect('highlight');
	}
}
$('.fields2').change(function(e) { if(this.checked) set_fields2(); });

var set_fields3a = function() {
	var i = vacancy_data_obj;
	if(i) {
		$('#obj_org_po_co_org_no_from').val(i.county_org_no).effect('highlight');
		$('#obj_org_po_sap_org_no_from').val(i.org_no).effect('highlight');
		$('#obj_org_po_cost_center_from').val(i.cost_center).effect('highlight');
	}
}

var set_fields3b = function() {
	var i = vacancy_data_new_obj || vacancy_obj;
	if(i) {
		$('#obj_org_po_co_org_no').val(i.county_org_no).effect('highlight');
		$('#obj_org_po_sap_org_no').val(i.org_no).effect('highlight');
		$('#obj_org_po_cost_center').val(i.cost_center).effect('highlight');
	}
}
$('.fields3').change(function(e) { if(this.checked) { set_fields3a(); set_fields3b(); } });

var set_fields4 = function() {
	var i = vacancy_data_new_obj || vacancy_obj;
	if(i) {
		$('#obj_org_org_co_org_no').val(i.county_org_no).effect('highlight');
		$('#obj_org_org_sap_org_no').val(i.org_no).effect('highlight');
		$('#obj_org_org_cost_center').val(i.cost_center).effect('highlight');
		$('#obj_org_org_position_no').val(i.position_no).effect('highlight');
	}
}
$('.fields4').change(function(e) { if(this.checked) set_fields4(); });		

var set_fields5 = function() {
	var i = vacancy_data_new_obj || vacancy_obj;
	if(i) {
		$('#obj_org_pos_position_no').val(i.position_no).effect('highlight');
	}
}
$('.fields5').change(function(e) { if(this.checked) set_fields5(); });		


init_select2({
	select: obj_vacancy_data_id,
	url: '<%= url_for(:controller => :vacancy_data, :action => :autocomplete) %>',
	params: function(params) {
		params.agency_id = obj_agency_id.val();
		params.department_id = obj_department_id.val();
		params.division_id = obj_division_id.val();
	},
	item: function(item) {
		item.text = item.position_no + ' ' + item.last_incumbent;
	},
	templateResult: function(i) {
		if(!i.id) return i.text;
		return $('<div>')
			.append($('<div>').text(i.position + ' - ' + (i.last_incumbent ? i.last_incumbent : '(NO INCUMBENT)')))
			.append($('<div class="ac-extra">')
				.append(i.status ? '' : '<b style="color: #800;">VACANT</b> ')
				.append('<i>Pos#:</i>&nbsp;').append($('<span>').text(i.position_no + ' '))
				.append('<i>Grp:</i>&nbsp;').append($('<span>').text(i.salary_group + ' '))
				.append('<i>Org:</i>&nbsp;').append($('<span>').text(i.organization + ' '))
				.append('<i>Org#:</i>&nbsp;').append($('<span>').text(i.org_no + ' '))
				.append('<i>CC:</i>&nbsp;').append($('<span>').text(i.cost_center + ' '))
			)
	}
}).on('select2:select', function(e) {
	var i = e.params.data;
	vacancy_data_obj = i;
	obj_position.val(i.position).effect('highlight');
	obj_position_no.val(i.position_no).effect('highlight');
	obj_first_name.val(i.first_name).effect('highlight');
	obj_last_name.val(i.last_name).effect('highlight');
	obj_middle_name.val(i.middle_name).effect('highlight');
	obj_org_no.val(i.org_no).effect('highlight');
	obj_county_org_no.val(i.county_org_no).effect('highlight');
	obj_cost_center.val(i.cost_center).effect('highlight');
	obj_personnel_no.val(i.personnel_no).effect('highlight');
	set_autocomplete_fields_vacancy_data_obj();
}).on('select2.unselect', function(e) {
	vacancy_data_obj = null;
});


init_select2({
	select: obj_vacancy_id,
	url: '<%= url_for(:controller => :vacancy, :action => :autocomplete) %>',
	params: function(params) {
		params.agency_id = obj_agency_id.val();
		params.department_id = obj_department_id.val();
		params.division_id = obj_division_id.val();
	},
	item: function(item) {
		item.text = (item.exec_approval_no || 'NA') + ' - ' + item.position;
	},
	templateResult: function(i) {
		if(!i.id) return i.text;
		return $('<div>')
			.append($('<div>').text(i.text))
			.append($('<div class="ac-extra">')
				.append('<i>Pos#:</i>&nbsp;')
				.append($('<span>').text(i.position_no + ' '))
				.append('<i>Grp:</i>&nbsp;')
				.append($('<span>').text(i.salary_group + ' '))
				.append('<i>Org#:</i>&nbsp;')
				.append($('<span>').text(i.org_no + ' '))
				.append('<i>CC:</i>&nbsp;')
				.append($('<span>').text(i.cost_center + ' '))
			)
	}
}).on('select2:select', function(e) {
	var i = e.params.data;
	vacancy_obj = i;
	obj_vacancy_no.val(i.exec_approval_no).effect('highlight');
	var v = i.vacancy_data;
	if(v) {
		var opt = new Option(obj_vacancy_data_new_label(v), v.id, true, true);
    obj_vacancy_data_new_id.append(opt).trigger('change');
    obj_vacancy_data_new_id.trigger({type: 'select2:select', params: {data: v}});
	}
	else {
		obj_vacancy_data_new_id.val(null).trigger('change');
		set_autocomplete_fields_vacancy_obj();
	}
}).on('select2:unselect', function(e) {
	vacancy_obj = null;
});

function obj_vacancy_data_new_label(i) {
	return i.position_no + ' ' + i.position;
}

init_select2({
	select: obj_vacancy_data_new_id,
	url: '<%= url_for(:controller => :vacancy_data, :action => :autocomplete) %>',
	params: function(params) {
		params.agency_id = obj_agency_id.val();
		params.department_id = obj_department_id.val();
		params.division_id = obj_division_id.val();
	},
	item: function(item) {
		item.text = obj_vacancy_data_new_label(item);
	},
	templateResult: function(i) {
		if(!i.id) return i.text;
		return $('<div>')
			.append($('<div>').text(i.position + ' - ' + (i.last_incumbent ? i.last_incumbent : '(NO INCUMBENT)')))
			.append($('<div class="ac-extra">')
				.append(i.status ? '' : '<b style="color: #800;">VACANT</b> ')
				.append('<i>Pos#:</i>&nbsp;').append($('<span>').text(i.position_no + ' '))
				.append('<i>Grp:</i>&nbsp;').append($('<span>').text(i.salary_group + ' '))
				.append('<i>Org:</i>&nbsp;').append($('<span>').text(i.organization + ' '))
				.append('<i>Org#:</i>&nbsp;').append($('<span>').text(i.org_no + ' '))
				.append('<i>CC:</i>&nbsp;').append($('<span>').text(i.cost_center + ' '))
			)
	}
}).on('select2:select', function(e) {
	var i = e.params.data;
	vacancy_data_new_obj = i;
	set_autocomplete_fields_vacancy_obj();
}).on('select2:unselect', function(e) {
	vacancy_data_new_obj = null;
});

init_autocomplete({
	input: obj_work_sched_code,
	url: '<%= url_for(:controller => :form_county_hire, :action => :work_schedule_autocomplete) %>',
	minLength: 0,
	item: function(i) {
		i.label = i.rule + ' - ' + i.text;
		i.value = i.rule;
	}
});

var cost_table_header = $('#cost-table-header');
var cost_table_lines = [];
var cost_tbody = $('#cost-tbody');
var cost_rows = cost_tbody.find('tr');
cost_rows.each(function(i, r) {
	var j = i + 1;
	cost_table_lines.push({
		cost_center: $('#obj_org_fund_cost_center' + j),
		order_no: $('#obj_org_fund_order_no' + j),
		percent: $('#obj_org_fund_percent' + j),
		fund: $('#obj_org_fund_fund' + j),
		grant: $('#obj_org_fund_grant' + j)
	});
});

var cost_visible_rows = function() {
	var last = 2;
	for(var i = 5; i >= 2; i--) {
		var l = cost_table_lines[i];
		if(l.cost_center.val() || l.order_no.val() || l.percent.val() || l.fund.val() || l.grant.val()) {
			last = i + 1;
			break;
		}
	}
	cost_rows.each(function(i, r) {
		$(r).toggle(i <= last);
	});
}
cost_tbody.on('change', function(e) { cost_visible_rows(); });

var obj_org_position_funding = $('#obj_org_position_funding');
var load_vacancy_cost_data = function() {
	var pos_no = '';
	if($('.fields1:checked')[0]) pos_no = $('#obj_action_position_no').val();
	if(!pos_no && $('.fields4:checked')[0]) pos_no = $('#obj_org_org_position_no').val();
	if(!pos_no && $('.fields5:checked')[0]) pos_no = $('#obj_org_pos_position_no').val();
	if(!pos_no) pos_no = obj_position_no.val();
	cost_table_header.addClass('busy-bg');
	$.ajax({
		url: '<%= url_for :controller => :vacancy_data, :action => :vacancy_cost_data %>',
		data: {
			position_no: pos_no,
			agency_id: obj_agency_id.val(),
			department_id: obj_department_id.val(),
			division_id: obj_division_id.val()					
		},
		complete: function(xhr, status) {
			cost_table_header.removeClass('busy-bg');
		},
		success: function(data, status, xhr) {
			for(var i = 0; i < 6; i++) {
				var d = {};
				if(data && data[i]) {
					d = data[i];
				}
				l = cost_table_lines[i];
				l.cost_center.val(d.cost_center).effect('highlight');
				l.order_no.val(d.order_no).effect('highlight');
				l.percent.val(d.percentage).effect('highlight');
				l.fund.val(d.fund).effect('highlight');
				l.grant.val(d.grant).effect('highlight');
			}
			cost_visible_rows();
		},
		error: function(xhr, status, error) {
		}
	});
}
obj_org_position_funding.change(function(e) {
	if(obj_org_position_funding[0].checked) load_vacancy_cost_data();
});
$('#reload-cost').click(function(e) { 
	e.preventDefault();
	load_vacancy_cost_data();
});

</script>
<%



%>
<% if false %>
<script>
	(function($) {
	
		var vacancy_obj = <%= (@obj.vacancy ? @obj.vacancy.autocomplete_json_data : nil).to_json %>;
		var vacancy_data_obj = <%= (@obj.vacancy_data ? @obj.vacancy_data.autocomplete_json_data : nil).to_json %>;
		
		var cost_table_header = $('#cost-table-header');
		var cost_table_lines = [];
		var cost_tbody = $('#cost-tbody');
		var cost_rows = cost_tbody.find('tr');
		cost_rows.each(function(i, r) {
			var j = i + 1;
			cost_table_lines.push({
				cost_center: $('#obj_org_fund_cost_center' + j),
				order_no: $('#obj_org_fund_order_no' + j),
				percent: $('#obj_org_fund_percent' + j),
				fund: $('#obj_org_fund_fund' + j),
				grant: $('#obj_org_fund_grant' + j)
			});
		});
		
		var cost_visible_rows = function() {
			var last = 2;
			for(var i = 5; i >= 2; i--) {
				var l = cost_table_lines[i];
				if(l.cost_center.val() || l.order_no.val() || l.percent.val() || l.fund.val() || l.grant.val()) {
					last = i + 1;
					break;
				}
			}
			cost_rows.each(function(i, r) {
				$(r).toggle(i <= last);
			});
		}
		cost_tbody.live('change', function(e) { cost_visible_rows(); });
		
		var set_autocomplete_fields = function() {
			if($('.fields1:checked').length) set_fields1();
			if($('.fields2:checked').length) set_fields2();
			if($('.fields3:checked').length) set_fields3();
			if($('.fields4:checked').length) set_fields4();
			if($('.fields5:checked').length) set_fields5();
		}
		
		var set_fields1 = function() {
			var i = vacancy_obj;
			if(i) {
				$('#obj_action_title').val(i.position).effect('highlight');
				$('#obj_action_position_no').val(i.position_no).effect('highlight');
				$('#obj_action_group').val(i.salary_group).effect('highlight');
				$('#obj_action_job_code').val(i.job_no).effect('highlight');
				if(i.flsa_exempt == 'E') {
					$('#obj_action_flsa_exempt_true').prop('checked', true);
				}
				else if(i.flsa_exempt == 'N') {
					$('#obj_action_flsa_exempt_false').prop('checked', true);
				}
				else {
					$('#obj_action_flsa_exempt_true').prop('checked', false);
					$('#obj_action_flsa_exempt_false').prop('checked', false);
				}				
			}
		}
		$('.fields1').change(function(e) { if(this.checked) set_fields1(); });
		
		var set_fields2 = function() {
			var i = vacancy_obj;
			if(i) {
				$('#obj_org_pe_po_co_org_no').val(i.county_org_no).effect('highlight');
				$('#obj_org_pe_po_sap_org_no').val(i.org_no).effect('highlight');
				$('#obj_org_pe_po_cost_center').val(i.cost_center).effect('highlight');
			}
		}
		$('.fields2').change(function(e) { if(this.checked) set_fields2(); });

		var set_fields3 = function() {
			var i = vacancy_data_obj;
			if(i) {
				$('#obj_org_po_co_org_no_from').val(i.county_org_no).effect('highlight');
				$('#obj_org_po_sap_org_no_from').val(i.org_no).effect('highlight');
				$('#obj_org_po_cost_center_from').val(i.cost_center).effect('highlight');
			}
			var i = vacancy_obj;
			if(i) {
				$('#obj_org_po_co_org_no').val(i.county_org_no).effect('highlight');
				$('#obj_org_po_sap_org_no').val(i.org_no).effect('highlight');
				$('#obj_org_po_cost_center').val(i.cost_center).effect('highlight');
			}
		}
		$('.fields3').change(function(e) { if(this.checked) set_fields3(); });
		
		var set_fields4 = function() {
			var i = vacancy_obj;
			if(i) {
				$('#obj_org_org_co_org_no').val(i.county_org_no).effect('highlight');
				$('#obj_org_org_sap_org_no').val(i.org_no).effect('highlight');
				$('#obj_org_org_cost_center').val(i.cost_center).effect('highlight');
				$('#obj_org_org_position_no').val(i.position_no).effect('highlight');
			}
		}
		$('.fields4').change(function(e) { if(this.checked) set_fields4(); });		
		
		var set_fields5 = function() {
			var i = vacancy_obj;
			if(i) {
				$('#obj_org_pos_position_no').val(i.position_no).effect('highlight');
			}
		}
		$('.fields5').change(function(e) { if(this.checked) set_fields5(); });		

	
		$('input.date').datepicker().attr('autocomplete', 'new-password');
		var org_no_input = $('#obj_org_no');
		var cost_center_input = $('#obj_cost_center');
		var position_input = $('#obj_position');
		var position_no_input = $('#obj_position_no');
		var name_input = $('#obj_name');
		var county_org_no_input = $('#obj_county_org_no');
	
		var load_vacancy_cost_data = function() {
			var pos_no = '';
			if($('.fields1:checked')[0]) {
				pos_no = $('#obj_action_position_no').val();
			}
			if(!pos_no && $('.fields4:checked')[0]) {
				pos_no = $('#obj_org_org_position_no').val();
			}
			if(!pos_no && $('.fields5:checked')[0]) {
				pos_no = $('#obj_org_pos_position_no').val();
			}
			if(!pos_no) {
				pos_no = position_no_input.val();
			}
			cost_table_header.addClass('busy-bg');
			$.ajax({
				url: '<%= url_for :controller => :vacancy, :action => :vacancy_cost_data %>',
				data: {
					position_no: pos_no,
					agency_id: $('#obj_agency_id').val(),
					department_id: $('#obj_department_id').val(),
					division_id: $('#obj_division_id').val()					
				},
				complete: function(xhr, status) {
					cost_table_header.removeClass('busy-bg');
				},
				success: function(data, status, xhr) {
					for(var i = 0; i < 6; i++) {
						var d = {};
						if(data && data[i]) {
							d = data[i];
						}
						l = cost_table_lines[i];
						l.cost_center.val(d.cost_center).effect('highlight');
						l.order_no.val(d.order_no).effect('highlight');
						l.percent.val(d.percentage).effect('highlight');
						l.fund.val(d.fund).effect('highlight');
						l.grant.val(d.grant).effect('highlight');
					}
					cost_visible_rows();
				},
				error: function(xhr, status, error) {
				}
			});
		}
		
		$('#obj_org_position_funding').change(function(e) {
			var $this = $(this);
			if(this.checked) {
				load_vacancy_cost_data();
			}
		});
		
		
		var setup_ac = function(input) {
			input.autocomplete({
				source: function(request, response) {
					input.addClass('busy-bg');
					$.ajax({
						url: '<%= url_for :controller => :vacancy, :action => :vacancy_autocomplete %>/',
						data: {
							search: name_input.val(),
							field: 'search',
							no_vacant: 1,
							agency_id: $('#obj_agency_id').val(),
							department_id: $('#obj_department_id').val(),
							division_id: $('#obj_division_id').val()
						},
						complete: function() {
							input.removeClass('busy-bg');
						},
						success: function(data, status, xhr) {
							response(data);
						}
					});
				},
				minLength: 2,
				select: function(e, ui) {
					var i = ui.item;
					vacancy_data_obj = i;
					set_autocomplete_fields();
					position_input.val(i.position).effect('highlight');
					position_no_input.val(i.position_no).effect('highlight');
					name_input.val(i.last_incumbent).effect('highlight');
					org_no_input.val(i.org_no).effect('highlight');
					county_org_no_input.val(i.county_org_no).effect('highlight');
					cost_center_input.val(i.cost_center).effect('highlight');
					return false;
				}
			}).data('autocomplete')._renderItem = function(ul, item) {
				var label = item.position + ' - ' + (item.last_incumbent ? item.last_incumbent : '(NO INCUMBENT)') + '<span class="ac-extra">' +
					'<br /><i>Pos#:</i> ' + item.position_no + ' &nbsp; <i>Grp:</i> ' + item.salary_group + (item.status ? '' : ' &nbsp; <b style="color: #800;">VACANT</b>')  +
					'<br />' + item.organization + ' <i>(' + item.org_no + ', ' + item.cost_center + ')</i>' +
					'</span>';
				return $('<li>').data('item.autocomplete', item).append('<a>' + label + '</a>').appendTo(ul);
			}
			input.attr('autocomplete', 'new-password');
		}
		setup_ac(name_input, 'last_incumbent');		
		
		var action_title_input = $('#obj_action_title');
		var action_position_no_input = $('#obj_action_position_no');
		var action_group_input = $('#obj_action_group');
		var action_job_code_input = $('#obj_action_job_code');
		
		var setup_ac2 = function(input) {
			input.autocomplete({
				source: function(request, response) {
					input.addClass('busy-bg');
					$.ajax({
						url: '<%= url_for :controller => :vacancy, :action => :vacancy_autocomplete %>/',
						data: {
							search: action_title_input.val(),
							field: 'search',
							agency_id: $('#obj_agency_id').val(),
							department_id: $('#obj_department_id').val(),
							division_id: $('#obj_division_id').val()
						},
						complete: function() {
							input.removeClass('busy-bg');
						},
						success: function(data, status, xhr) {
							response(data);
						}
					});
				},
				minLength: 2,
				select: function(e, ui) {
					var i = ui.item;
					action_title_input.val(i.position).effect('highlight');
					action_position_no_input.val(i.position_no).effect('highlight');
					action_group_input.val(i.salary_group).effect('highlight');
					action_job_code_input.val(i.job_no).effect('highlight');
					if(i.flsa_exempt == 'E') {
						$('#obj_action_flsa_exempt_true').prop('checked', true);
					}
					else if(i.flsa_exempt == 'N') {
						$('#obj_action_flsa_exempt_false').prop('checked', true);
					}
					else {
						$('#obj_action_flsa_exempt_true').prop('checked', false);
						$('#obj_action_flsa_exempt_false').prop('checked', false);
					}					
					return false;
				}
			}).data('autocomplete')._renderItem = function(ul, item) {
				var label = item.position + '<span class="ac-extra">' +
					'<br /><i>Pos#:</i> ' + item.position_no + ' &nbsp; <i>Grp:</i> ' + item.salary_group + (item.status ? '' : ' &nbsp; <b style="color: #800;">VACANT</b>')  +
					'<br />' + item.organization + ' <i>(' + item.org_no + ', ' + item.cost_center + ', ' + item.county_org_no + ')</i>' +
					'</span>';
				return $('<li>').data('item.autocomplete', item).append('<a>' + label + '</a>').appendTo(ul);
			}
			input.attr('autocomplete', 'new-password');
		}
		setup_ac2(action_title_input);
		
		var vacancy_no_input = $('#obj_vacancy_no');
		var setup_vacancy_ac = function(input) {
			input.autocomplete({
				focus: function(e, ui) {
					return false;
				},
				minLength: 2,
				select: function(e, ui) {
					var i = ui.item;
					vacancy_obj = i;
					set_autocomplete_fields();
					vacancy_no_input.val(i.exec_approval_no).effect('highlight');
					return false;
				},
				position: {my: 'right top', at: 'right bottom', collision: 'none'},
				source: function(request, response) {		
					request.agency_id = $('#obj_agency_id').val();
					request.department_id = $('#obj_department_id').val();
					request.division_id = $('#obj_division_id').val();			
					input.addClass('busy-bg');
					$.ajax({
						url: '<%= url_for(:controller => :vacancy, :action => :autocomplete) %>',
						data: request,
						success: function(data, status, xhr) {
							response(data);
						},
						complete: function(xhr, status) {
							input.removeClass('busy-bg');
						},
						error: function(xhr, status, error) {
						}
					});
				}
			}).data('autocomplete')._renderItem = function(ul, item) {
				var label = (item.exec_approval_no || 'NA') + ' - ' + item.position + '<span class="ac-extra">' +
					(item.last_incumbent ? ('<br /><i>Last Inc.:</i> ' + item.last_incumbent) : '') + 
					'<br /><i>Pos#:</i> ' + item.position_no + ' &nbsp; <i>Grp:</i> ' + item.salary_group +
					'<br /><i>Org#:</i> ' + item.org_no + ' &nbsp; <i>CC:</i> ' + item.cost_center +
						'</span>';
				return $('<li>').data('item.autocomplete', item).append('<a>' + label + '</a>').appendTo(ul);
			};
			input.attr('autocomplete', 'new-password');
		}
		setup_vacancy_ac(vacancy_no_input);
		
		var wcode = $('#obj_org_work_sched_code');
		wcode.autocomplete({	
			minLength: 1,
			source: function(request, response) {
				wcode.addClass('busy-bg');
				$.ajax({
					url: '<%= url_for(:controller => :form_county_hire, :action => :work_schedule_autocomplete) %>',
					data: request,
					success: function(data, status, xhr) {
						for(var i = 0; i < data.length; i++) {
							d = data[i];
							data[i] = {label: d.rule + ' - ' + d.text, value: d.rule};
						}
						response(data);
					},
					complete: function(xhr, status) {
						wcode.removeClass('busy-bg');
					},
					error: function(xhr, status, error) {
					}
				});
			}
		})
		wcode.attr('autocomplete', 'new-password');
		
	})(jQuery);
</script>
<% end %>